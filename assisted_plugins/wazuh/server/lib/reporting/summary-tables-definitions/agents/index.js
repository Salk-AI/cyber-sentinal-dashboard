"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _aggregation_fields = require("../aggregation_fields");
const generalAlertsSummary = {
  title: 'Alerts summary',
  aggs: [_aggregation_fields.AggregationFields['rule.id'], _aggregation_fields.AggregationFields['rule.description'], _aggregation_fields.AggregationFields['rule.level']]
};
const generalGroupsSummary = {
  title: 'Groups summary',
  aggs: [_aggregation_fields.AggregationFields['rule.groups']]
};
const awsAlertsSummary = {
  title: 'Alerts summary',
  aggs: [_aggregation_fields.AggregationFields['rule.id'], _aggregation_fields.AggregationFields['rule.description'], _aggregation_fields.AggregationFields['rule.level']]
};
const fimAlertsSummary = {
  title: 'Alerts summary',
  aggs: [_aggregation_fields.AggregationFields['syscheck.path'], _aggregation_fields.AggregationFields['rule.description']]
};
const gcpAlertsSummary = {
  title: 'Alerts summary',
  aggs: [_aggregation_fields.AggregationFields['rule.id'], _aggregation_fields.AggregationFields['rule.description'], _aggregation_fields.AggregationFields['rule.level']]
};
const virustotalAlertsSummary = {
  title: 'Alerts summary',
  aggs: [_aggregation_fields.AggregationFields['rule.id'], _aggregation_fields.AggregationFields['rule.description'], _aggregation_fields.AggregationFields['rule.level']]
};
const osqueryAlertsSummary = {
  title: 'Alerts summary',
  aggs: [_aggregation_fields.AggregationFields['data.osquery.name'], _aggregation_fields.AggregationFields['data.osquery.action'], _aggregation_fields.AggregationFields['agent.name'], _aggregation_fields.AggregationFields['data.osquery.pack'], _aggregation_fields.AggregationFields['data.osquery.calendarTime']]
};
const mitreAlertsSummary = {
  title: 'Alerts summary',
  aggs: [_aggregation_fields.AggregationFields['rule.id'], _aggregation_fields.AggregationFields['rule.description'], _aggregation_fields.AggregationFields['rule.level']]
};
const ciscatAlertsSummary = {
  title: 'Alerts summary',
  aggs: [_aggregation_fields.AggregationFields['data.cis.rule_title'], _aggregation_fields.AggregationFields['data.cis.group'], _aggregation_fields.AggregationFields['data.cis.result']]
};
const pmAlertsSummary = {
  title: 'Alerts summary',
  aggs: [_aggregation_fields.AggregationFields['rule.description'], _aggregation_fields.AggregationFields['data.title']]
};
const tscAlertsSummary = {
  title: 'Alerts summary',
  aggs: [_aggregation_fields.AggregationFields['agent.name'], _aggregation_fields.AggregationFields['rule.tsc'], _aggregation_fields.AggregationFields['rule.description']]
};
const githubAlertsSummary = {
  title: 'Alerts summary',
  aggs: [_aggregation_fields.AggregationFields['agent.name'], _aggregation_fields.AggregationFields['data.github.org'], _aggregation_fields.AggregationFields['rule.description']]
};

// 'Wazuh-App-Agents-GDPR-Last-alerts'
const gdprLastAlerts = {
  title: 'Last alerts',
  aggs: [_aggregation_fields.AggregationFields['rule.gdpr'], _aggregation_fields.AggregationFields['rule.description']]
};

// 'Wazuh-App-Agents-PCI-Last-alerts'
const pciLastAlerts = {
  title: 'Last alerts',
  aggs: [_aggregation_fields.AggregationFields['rule.pci_dss'], _aggregation_fields.AggregationFields['rule.description']]
};

// 'Wazuh-App-Agents-NIST-Last-alerts'
const nistLastAlerts = {
  title: 'Alerts summary',
  aggs: [_aggregation_fields.AggregationFields['rule.nist_800_53'], _aggregation_fields.AggregationFields['rule.level'], _aggregation_fields.AggregationFields['rule.description']]
};

// 'Wazuh-App-Agents-HIPAA-Last-alerts'
const hipaaLastAlerts = {
  title: 'Alerts summary',
  aggs: [_aggregation_fields.AggregationFields['rule.hipaa'], _aggregation_fields.AggregationFields['rule.level'], _aggregation_fields.AggregationFields['rule.description']]
};

// 'Wazuh-App-Agents-OSCAP-Last-alerts'
const oscapLastAlerts = {
  title: 'Last alerts',
  aggs: [_aggregation_fields.AggregationFields['data.oscap.check.title'], _aggregation_fields.AggregationFields['data.oscap.scan.profile.title']]
};

// 'Wazuh-App-Agents-Audit-Last-alerts'
const auditLastAlerts = {
  title: 'Last alerts',
  aggs: [_aggregation_fields.AggregationFields['rule.description'], _aggregation_fields.AggregationFields['data.audit.exe'], _aggregation_fields.AggregationFields['data.audit.type']]
};
const dockerAlertsSummary = {
  title: 'Events summary',
  aggs: [_aggregation_fields.AggregationFields['data.docker.Actor.Attributes.name'], _aggregation_fields.AggregationFields['data.docker.Action'], _aggregation_fields.AggregationFields['timestamp']]
};
var _default = exports.default = {
  general: [generalAlertsSummary, generalGroupsSummary],
  aws: [awsAlertsSummary],
  fim: [fimAlertsSummary],
  github: [githubAlertsSummary],
  hipaa: [hipaaLastAlerts],
  nist: [nistLastAlerts],
  gcp: [gcpAlertsSummary],
  tsc: [tscAlertsSummary],
  virustotal: [virustotalAlertsSummary],
  osquery: [osqueryAlertsSummary],
  mitre: [mitreAlertsSummary],
  ciscat: [ciscatAlertsSummary],
  pm: [pmAlertsSummary],
  audit: [auditLastAlerts],
  oscap: [oscapLastAlerts],
  gdpr: [gdprLastAlerts],
  pci: [pciLastAlerts],
  docker: [dockerAlertsSummary]
};
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,