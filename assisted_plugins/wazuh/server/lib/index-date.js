"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.indexDate = indexDate;
/*
 * Wazuh app - Module to get the index name according to date interval
 * Copyright (C) 2015-2022 Wazuh, Inc.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * Find more information about this on the LICENSE file.
 */

function indexDate(interval) {
  try {
    if (!interval) throw new Error('Creation interval not found');
    const d = new Date().toISOString().replace(/T/, '-').replace(/\..+/, '').replace(/-/g, '.').replace(/:/g, '');
    let date = '';
    switch (interval) {
      case 'h':
        date = d.slice(0, -4) + 'h';
        break;
      case 'd':
        date = d.slice(0, -7);
        break;
      case 'w':
        date = d.slice(0, -12) + weekOfYear() + 'w';
        break;
      case 'm':
        date = d.slice(0, -10);
        break;
      default:
        throw new Error('Creation interval not found');
    }
    return date;
  } catch (error) {
    return new Date().toISOString().replace(/T/, '-').replace(/\..+/, '').replace(/-/g, '.').replace(/:/g, '').slice(0, -7);
  }
}
function weekOfYear() {
  var d = new Date();
  d.setHours(0, 0, 0);
  d.setDate(d.getDate() + 4 - (d.getDay() || 7));
  return Math.ceil(((d - new Date(d.getFullYear(), 0, 1)) / 8.64e7 + 1) / 7);
}
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJpbmRleERhdGUiLCJpbnRlcnZhbCIsIkVycm9yIiwiZCIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsInJlcGxhY2UiLCJkYXRlIiwic2xpY2UiLCJ3ZWVrT2ZZZWFyIiwiZXJyb3IiLCJzZXRIb3VycyIsInNldERhdGUiLCJnZXREYXRlIiwiZ2V0RGF5IiwiTWF0aCIsImNlaWwiLCJnZXRGdWxsWWVhciJdLCJzb3VyY2VzIjpbImluZGV4LWRhdGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIFdhenVoIGFwcCAtIE1vZHVsZSB0byBnZXQgdGhlIGluZGV4IG5hbWUgYWNjb3JkaW5nIHRvIGRhdGUgaW50ZXJ2YWxcbiAqIENvcHlyaWdodCAoQykgMjAxNS0yMDIyIFdhenVoLCBJbmMuXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU7IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAqIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG4gKiB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uOyBlaXRoZXIgdmVyc2lvbiAyIG9mIHRoZSBMaWNlbnNlLCBvclxuICogKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiAqXG4gKiBGaW5kIG1vcmUgaW5mb3JtYXRpb24gYWJvdXQgdGhpcyBvbiB0aGUgTElDRU5TRSBmaWxlLlxuICovXG5cbmV4cG9ydCBmdW5jdGlvbiBpbmRleERhdGUoaW50ZXJ2YWw6ICdoJyB8ICdkJyB8ICd3JyB8ICdtJyk6IHN0cmluZyB7XG4gIHRyeSB7XG4gICAgaWYgKCFpbnRlcnZhbCkgdGhyb3cgbmV3IEVycm9yKCdDcmVhdGlvbiBpbnRlcnZhbCBub3QgZm91bmQnKTtcbiAgICBjb25zdCBkID0gbmV3IERhdGUoKVxuICAgICAgLnRvSVNPU3RyaW5nKClcbiAgICAgIC5yZXBsYWNlKC9ULywgJy0nKVxuICAgICAgLnJlcGxhY2UoL1xcLi4rLywgJycpXG4gICAgICAucmVwbGFjZSgvLS9nLCAnLicpXG4gICAgICAucmVwbGFjZSgvOi9nLCAnJyk7XG4gICAgbGV0IGRhdGUgPSAnJztcbiAgICBzd2l0Y2ggKGludGVydmFsKSB7XG4gICAgICBjYXNlICdoJzpcbiAgICAgICAgZGF0ZSA9IGQuc2xpY2UoMCwgLTQpICsgJ2gnO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ2QnOlxuICAgICAgICBkYXRlID0gZC5zbGljZSgwLCAtNyk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAndyc6XG4gICAgICAgIGRhdGUgPSBkLnNsaWNlKDAsIC0xMikgKyB3ZWVrT2ZZZWFyKCkgKyAndyc7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnbSc6XG4gICAgICAgIGRhdGUgPSBkLnNsaWNlKDAsIC0xMCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDcmVhdGlvbiBpbnRlcnZhbCBub3QgZm91bmQnKTtcbiAgICB9XG4gICAgcmV0dXJuIGRhdGU7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmV0dXJuIG5ldyBEYXRlKClcbiAgICAgIC50b0lTT1N0cmluZygpXG4gICAgICAucmVwbGFjZSgvVC8sICctJylcbiAgICAgIC5yZXBsYWNlKC9cXC4uKy8sICcnKVxuICAgICAgLnJlcGxhY2UoLy0vZywgJy4nKVxuICAgICAgLnJlcGxhY2UoLzovZywgJycpXG4gICAgICAuc2xpY2UoMCwgLTcpO1xuICB9XG59XG5cbmZ1bmN0aW9uIHdlZWtPZlllYXIoKTogbnVtYmVyIHtcbiAgdmFyIGQgPSBuZXcgRGF0ZSgpO1xuICBkLnNldEhvdXJzKDAsIDAsIDApO1xuICBkLnNldERhdGUoZC5nZXREYXRlKCkgKyA0IC0gKGQuZ2V0RGF5KCkgfHwgNykpO1xuICByZXR1cm4gTWF0aC5jZWlsKCgoZCAtIG5ldyBEYXRlKGQuZ2V0RnVs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