"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dataOsquery = void 0;
/*
 * Wazuh app - Osquery sample alerts
 * Copyright (C) 2015-2022 Wazuh, Inc.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * Find more information about this on the LICENSE file.
 */

const dataOsquery = exports.dataOsquery = [{
  osquery: {
    calendarTime: new Date(),
    subquery: "osquery_info",
    columns: {
      counter: "43",
      uuid: "EC234A5B-D23B-A7AD-CFF7-BC3F24CC5366",
      version: "3.3.2"
    },
    name: "pack_osquery-monitoring_osquery_info",
    action: "added",
    epoch: "0",
    counter: "1836",
    pack: "osquery-monitoring"
  },
  rule: {
    firedtimes: 2,
    mail: false,
    level: 4,
    description: 'osquery: osquery-monitoring osquery_info: Osquery version is 3.3.2 build on ubuntu xenial'
  }
}, {
  osquery: {
    calendarTime: new Date(),
    subquery: "iptables",
    columns: {
      chain: "POSTROUTING",
      filter_name: "nat",
      dst_mask: "0.0.0.0",
      match: "yes",
      src_mask: "255.255.0.0",
      dst_ip: "0.0.0.0",
      packets: "43092",
      target: "MASQUERADE",
      src_ip: "172.17.0.0",
      protocol: "0",
      outiface_mask: "FFFFFFFFFFFFFFFF",
      bytes: "3271628",
      iniface: "all",
      outiface: "docker0",
      policy: "ACCEPT"
    },
    name: "pack_incident-response_iptables",
    action: "added",
    epoch: "0",
    counter: "282",
    pack: "incident-response"
  },
  rule: {
    firedtimes: 17,
    mail: false,
    level: 4,
    description: "osquery: incident-response iptables: Iptable source ip 172.17.0.0 with policy ACCEPT and target MASQUERADE has a packet count of 43092"
  }
}, {
  osquery: {
    calendarTime: new Date(),
    subquery: "iptables",
    columns: {
      chain: "PREROUTING",
      filter_name: "nat",
      dst_mask: "0.0.0.0",
      match: "yes",
      src_mask: "0.0.0.0",
      dst_ip: "0.0.0.0",
      packets: "34553",
      target: "DOCKER",
      src_ip: "0.0.0.0",
      protocol: "0",
      bytes: "2065050",
      iniface: "all",
      outiface: "all",
      policy: "ACCEPT"
    },
    name: "pack_incident-response_iptables",
    action: "added",
    epoch: "0",
    counter: "282",
    pack: "incident-response"
  },
  rule: {
    firedtimes: 17,
    mail: false,
    level: 4,
    description: "osquery: incident-response iptables: Iptable source ip 0.0.0.0 with policy ACCEPT and target DOCKER has a packet count of 34553"
  }
}, {
  osquery: {
    calendarTime: new Date(),
    subquery: "schedule",
    columns: {
      average_memory: "0",
      avg_system_time: "0",
      executions: "177",
      output_size: "0",
      name: "pack_ossec-rootkit_zk_rootkit",
      interval: "3600",
      avg_user_time: "0",
      last_executed: "1587482079",
      wall_time: "0"
    },
    name: "pack_osquery-monitoring_schedule",
    action: "added",
    epoch: "0",
    counter: "282",
    pack: "osquery-monitoring"
  },
  rule: {
    firedtimes: 82,
    mail: false,
    level: 4,
    description: "osquery: osquery-monitoring schedule: The pack executed is pack_ossec-rootkit_zk_rootkit and the interval is 3600 "
  }
}, {
  osquery: {
    calendarTime: new Date(),
    subquery: "osquery_info",
    columns: {
      watcher: "18596",
      system_time: "86740",
      config_valid: "1",
      pid: "18631",
      counter: "33",
      uuid: "EC234A5B-D23B-A7AD-CFF7-BC3F24CC5366",
      version: "3.3.2",
      config_hash: "8423af1820e09cef21c8ed5594827b13ea8af90d",
      build_platform: "ubuntu",
      start_time: "1586893611",
      extensions: "active",
      instance_id: "29ebc250-4d9d-4420-b46f-127ff9e2437d",
      build_distro: "xenial",
      resident_size: "66664000",
      user_time: "124490"
    },
    name: "pack_osquery-monitoring_osquery_info",
    action: "added",
    epoch: "0",
    counter: "1789",
    pack: "osquery-monitoring"
  },
  rule: {
    firedtimes: 82,
    mail: false,
    level: 4,
    description: "osquery: osquery-monitoring schedule: The pack executed is pack_ossec-rootkit_zk_rootkit and the interval is 3600 "
  }
}, {
  osquery: {
    calendarTime: new Date(),
    subquery: "mounts",
    columns: {
      path: "/",
      blocks: "5239803",
      inodes: "10484720",
      flags: "rw,seclabel,relatime,attr2,inode64,noquota",
      inodes_free: "10436261",
      blocks_size: "4096",
      blocks_available: "3940776",
      type: "xfs",
      device: "/dev/xvda2",
      device_alias: "/dev/xvda2",
      blocks_free: "3940776"
    },
    name: "pack_incident-response_mounts",
    action: "added",
    epoch: "0",
    counter: "278",
    pack: "incident-response"
  },
  rule: {
    firedtimes: 82,
    mail: false,
    level: 4,
    description: "osquery: osquery-monitoring schedule: The pack executed is pack_ossec-rootkit_zk_rootkit and the interval is 3600 "
  }
}, {
  osquery: {
    calendarTime: new Date(),
    subquery: "iptables",
    columns: {
      memory_free: "156012544",
      memory_free_perc: "0.039271301812363",
      threshold: "10%",
      memory_total: "3972685824"
    },
    name: "low_free_memory",
    action: "added",
    epoch: "0",
    counter: "548"
  },
  rule: {
    firedtimes: 82,
    mail: false,
    level: 4,
    description: "osquery: System memory is under 10%"
  }
}, {
  osquery: {
    calendarTime: new Date(),
    subquery: "iptables",
    columns: {
      memory_free: "156012544",
      memory_free_perc: "0.039271301812363",
      threshold: "15%",
      memory_total: "3972685824"
    },
    name: "low_free_memory",
    action: "added",
    epoch: "0",
    counter: "548"
  },
  rule: {
    firedtimes: 82,
    mail: false,
    level: 4,
    description: "osquery: System memory is under 15%"
  }
}, {
  osquery: {
    calendarTime: new Date(),
    subquery: "process_memory",
    columns: {
      inode: "0",
      offset: "0",
      permissions: "r-xp",
      start: "0xffffffffff600000",
      end: "0xffffffffff601000",
      pid: "644",
      device: "00:00",
      pseudo: "1"
    },
    name: "pack_incident-response_process_memory",
    action: "added",
    epoch: "0",
    counter: "12"
  },
  rule: {
    firedtimes: 7621,
    mail: false,
    level: 4,
    description: "osquery: incident-response process_memory: Process 644 [vsyscall] memory start 0xffffffffff600000, memory end 0xffffffffff601000"
  }
}, {
  osquery: {
    calendarTime: new Date(),
    subquery: "iptables",
    columns: {
      chain: "POSTROUTING",
      filter_name: "nat",
      dst_mask: "0.0.0.0",
      match: "yes",
      src_mask: "255.255.0.0",
      dst_ip: "0.0.0.0",
      packets: "43294",
      target: "MASQUERADE",
      src_ip: "172.17.0.0",
      protocol: "0",
      outiface_mask: "FFFFFFFFFFFFFFFF",
      bytes: "3287370",
      iniface: "all",
      outiface: "docker0",
      policy: "ACCEPT"
    },
    name: "pack_incident-response_iptables",
    action: "added",
    epoch: "0",
    counter: "283"
  },
  rule: {
    firedtimes: 18,
    mail: false,
    level: 4,
    description: "osquery: incident-response iptables: Iptable source ip 172.17.0.0 with policy ACCEPT and target MASQUERADE has a packet count of 43294"
  }
}, {
  osquery: {
    calendarTime: new Date(),
    subquery: "process_env",
    columns: {
      pid: "26151",
      value: "244",
      key: "GENERATION"
    },
    name: "pack_incident-response_process_env",
    action: "added",
    epoch: "0",
    counter: "11"
  },
  rule: {
    firedtimes: 18,
    mail: false,
    level: 4,
    description: "osquery: incident-response process_env: Process 26151 Environment variable GENERATION value 244"
  }
}, {
  osquery: {
    calendarTime: new Date(),
    subquery: "device_nodes",
    columns: {
      mode: "0666",
      path: "/dev/ptmx",
      uid: "0",
      atime: "0",
      gid: "5",
      ctime: "1586444340",
      mtime: "1587489592",
      type: "character",
      block_size: "4096"
    },
    name: "pack_hardware-monitoring_device_nodes",
    action: "added",
    epoch: "0",
    counter: "138",
    pack: "hardware-monitoring"
  },
  rule: {
    firedtimes: 6,
    mail: false,
    level: 4,
    description: "osquery: hardware-monitoring device_nodes: Device /dev/ptmx, UID 0, GID 5, type character"
  }
}, {
  osquery: {
    calendarTime: new Date(),
    subquery: "last",
    columns: {
      tty: "pts/0",
      pid: "25728",
      time: "1587494777",
      type: "8"
    },
    name: "pack_incident-response_last",
    action: "added",
    epoch: "0",
    counter: "1",
    pack: "incident-response"
  },
  rule: {
    firedtimes: 2,
    mail: false,
    level: 4,
    description: "osquery: incident-response last: User  host"
  }
}, {
  osquery: {
    calendarTime: new Date(),
    subquery: "open_files",
    columns: {
      path: "/var/osquery/osquery.db/MANIFEST-016679",
      pid: "18631"
    },
    name: "pack_incident-response_open_files",
    action: "added",
    epoch: "0",
    counter: "11",
    pack: "incident-response"
  },
  rule: {
    firedtimes: 2,
    mail: false,
    level: 4,
    description: "osquery: incident-response open_files: Process 18631 has file /var/osquery/osquery.db/MANIFEST-016679 opened"
  }
}];
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJkYXRhT3NxdWVyeSIsImV4cG9ydHMiLCJvc3F1ZXJ5IiwiY2FsZW5kYXJUaW1lIiwiRGF0ZSIsInN1YnF1ZXJ5IiwiY29sdW1ucyIsImNvdW50ZXIiLCJ1dWlkIiwidmVyc2lvbiIsIm5hbWUiLCJhY3Rpb24iLCJlcG9jaCIsInBhY2siLCJydWxlIiwiZmlyZWR0aW1lcyIsIm1haWwiLCJsZXZlbCIsImRlc2NyaXB0aW9uIiwiY2hhaW4iLCJmaWx0ZXJfbmFtZSIsImRzdF9tYXNrIiwibWF0Y2giLCJzcmNfbWFzayIsImRzdF9pcCIsInBhY2tldHMiLCJ0YXJnZXQiLCJzcmNfaXAiLCJwcm90b2NvbCIsIm91dGlmYWNlX21hc2siLCJieXRlcyIsImluaWZhY2UiLCJvdXRpZmFjZSIsInBvbGljeSIsImF2ZXJhZ2VfbWVtb3J5IiwiYXZnX3N5c3RlbV90aW1lIiwiZXhlY3V0aW9ucyIsIm91dHB1dF9zaXplIiwiaW50ZXJ2YWwiLCJhdmdfdXNlcl90aW1lIiwibGFzdF9leGVjdXRlZCIsIndhbGxfdGltZSIsIndhdGNoZXIiLCJzeXN0ZW1fdGltZSIsImNvbmZpZ192YWxpZCIsInBpZCIsImNvbmZpZ19oYXNoIiwiYnVpbGRfcGxhdGZvcm0iLCJzdGFydF90aW1lIiwiZXh0ZW5zaW9ucyIsImluc3RhbmNlX2lkIiwiYnVpbGRfZGlzdHJvIiwicmVzaWRlbnRfc2l6ZSIsInVzZXJfdGltZSIsInBhdGgiLCJibG9ja3MiLCJpbm9kZXMiLCJmbGFncyIsImlub2Rlc19mcmVlIiwiYmxvY2tzX3NpemUiLCJibG9ja3NfYXZhaWxhYmxlIiwidHlwZSIsImRldmljZSIsImRldmljZV9hbGlhcyIsImJsb2Nrc19mcmVlIiwibWVtb3J5X2ZyZWUiLCJtZW1vcnlfZnJlZV9wZXJjIiwidGhyZXNob2xkIiwibWVtb3J5X3RvdGFsIiwiaW5vZGUiLCJvZmZzZXQiLCJwZXJtaXNzaW9ucyIsInN0YXJ0IiwiZW5kIiwicHNldWRvIiwidmFsdWUiLCJrZXkiLCJtb2RlIiwidWlkIiwiYXRpbWUiLCJnaWQiLCJjdGltZSIsIm10aW1lIiwiYmxvY2tfc2l6ZSIsInR0eSIsInRpbWUiXSwic291cmNlcyI6WyJvc3F1ZXJ5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBXYXp1aCBhcHAgLSBPc3F1ZXJ5IHNhbXBsZSBhbGVydHNcbiAqIENvcHlyaWdodCAoQykgMjAxNS0yMDIyIFdhenVoLCBJbmMuXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU7IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAqIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG4gKiB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uOyBlaXRoZXIgdmVyc2lvbiAyIG9mIHRoZSBMaWNlbnNlLCBvclxuICogKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiAqXG4gKiBGaW5kIG1vcmUgaW5mb3JtYXRpb24gYWJvdXQgdGhpcyBvbiB0aGUgTElDRU5TRSBmaWxlLlxuICovXG5cbmV4cG9ydCBjb25zdCBkYXRhT3NxdWVyeSA9IFt7XG4gICAgb3NxdWVyeToge1xuICAgICAgY2FsZW5kYXJUaW1lOiBuZXcgRGF0ZSgpLFxuICAgICAgc3VicXVlcnk6IFwib3NxdWVyeV9pbmZvXCIsXG4gICAgICBjb2x1bW5zOiB7XG4gICAgICAgIGNvdW50ZXI6IFwiNDNcIixcbiAgICAgICAgdXVpZDogXCJFQzIzNEE1Qi1EMjNCLUE3QUQtQ0ZGNy1CQzNGMjRDQzUzNjZcIixcbiAgICAgICAgdmVyc2lvbjogXCIzLjMuMlwiLFxuICAgICAgfSxcbiAgICAgIG5hbWU6IFwicGFja19vc3F1ZXJ5LW1vbml0b3Jpbmdfb3NxdWVyeV9pbmZvXCIsXG4gICAgICBhY3Rpb246IFwiYWRkZWRcIixcbiAgICAgIGVwb2NoOiBcIjBcIixcbiAgICAgIGNvdW50ZXI6IFwiMTgzNlwiLFxuICAgICAgcGFjazogXCJvc3F1ZXJ5LW1vbml0b3JpbmdcIlxuICAgIH0sXG4gICAgcnVsZToge1xuICAgICAgZmlyZWR0aW1lczogMixcbiAgICAgIG1haWw6IGZhbHNlLFxuICAgICAgbGV2ZWw6IDQsXG4gICAgICBkZXNjcmlwdGlvbjogJ29zcXVlcnk6IG9zcXVlcnktbW9uaXRvcmluZyBvc3F1ZXJ5X2luZm86IE9zcXVlcnkgdmVyc2lvbiBpcyAzLjMuMiBidWlsZCBvbiB1YnVudHUgeGVuaWFsJ1xuICAgIH1cbiAgfSxcbiAge1xuICAgIG9zcXVlcnk6IHtcbiAgICAgIGNhbGVuZGFyVGltZTogbmV3IERhdGUoKSxcbiAgICAgIHN1YnF1ZXJ5OiBcImlwdGFibGVzXCIsXG4gICAgICBjb2x1bW5zOiB7XG4gICAgICAgIGNoYWluOiBcIlBPU1RST1VUSU5HXCIsXG4gICAgICAgIGZpbHRlcl9uYW1lOiBcIm5hdFwiLFxuICAgICAgICBkc3RfbWFzazogXCIwLjAuMC4wXCIsXG4gICAgICAgIG1hdGNoOiBcInllc1wiLFxuICAgICAgICBzcmNfbWFzazogXCIyNTUuMjU1LjAuMFwiLFxuICAgICAgICBkc3RfaXA6IFwiMC4wLjAuMFwiLFxuICAgICAgICBwYWNrZXRzOiBcIjQzMDkyXCIsXG4gICAgICAgIHRhcmdldDogXCJNQVNRVUVSQURFXCIsXG4gICAgICAgIHNyY19pcDogXCIxNzIuMTcuMC4wXCIsXG4gICAgICAgIHByb3RvY29sOiBcIjBcIixcbiAgICAgICAgb3V0aWZhY2VfbWFzazogXCJGRkZGRkZGRkZGRkZGRkZGXCIsXG4gICAgICAgIGJ5dGVzOiBcIjMyNzE2MjhcIixcbiAgICAgICAgaW5pZmFjZTogXCJhbGxcIixcbiAgICAgICAgb3V0aWZhY2U6IFwiZG9ja2VyMFwiLFxuICAgICAgICBwb2xpY3k6IFwiQUNDRVBUXCJcbiAgICAgIH0sXG4gICAgICBuYW1lOiBcInBhY2tfaW5jaWRlbnQtcmVzcG9uc2VfaXB0YWJsZXNcIixcbiAgICAgIGFjdGlvbjogXCJhZGRlZFwiLFxuICAgICAgZXBvY2g6IFwiMFwiLFxuICAgICAgY291bnRlcjogXCIyODJcIixcbiAgICAgIHBhY2s6IFwiaW5jaWRlbnQtcmVzcG9uc2VcIlxuICAgIH0sXG4gICAgcnVsZToge1xuICAgICAgZmlyZWR0aW1lczogMTcsXG4gICAgICBtYWlsOiBmYWxzZSxcbiAgICAgIGxldmVsOiA0LFxuICAgICAgZGVzY3JpcHRpb246IFwib3NxdWVyeTogaW5jaWRlbnQtcmVzcG9uc2UgaXB0YWJsZXM6IElwdGFibGUgc291cmNlIGlwIDE3Mi4xNy4wLjAgd2l0aCBwb2xpY3kgQUNDRVBUIGFuZCB0YXJnZXQgTUFTUVVFUkFERSBoYXMgYSBwYWNrZXQgY291bnQgb2YgNDMwOTJcIixcbiAgICB9XG4gIH0sXG4gIHtcbiAgICBvc3F1ZXJ5OiB7XG4gICAgICBjYWxlbmRhclRpbWU6IG5ldyBEYXRlKCksXG4gICAgICBzdWJxdWVyeTogXCJpcHRhYmxlc1wiLFxuICAgICAgY29sdW1uczoge1xuICAgICAgICBjaGFpbjogXCJQUkVST1VUSU5HXCIsXG4gICAgICAgIGZpbHRlcl9uYW1lOiBcIm5hdFwiLFxuICAgICAgICBkc3RfbWFzazogXCIwLjAuMC4wXCIsXG4gICAgICAgIG1hdGNoOiBcInllc1wiLFxuICAgICAgICBzcmNfbWFzazogXCIwLjAuMC4wXCIsXG4gICAgICAgIGRzdF9pcDogXCIwLjAuMC4wXCIsXG4gICAgICAgIHBhY2tldHM6IFwiMzQ1NTNcIixcbiAgICAgICAgdGFyZ2V0OiBcIkRPQ0tFUlwiLFxuICAgICAgICBzcmNfaXA6IFwiMC4wLjAuMFwiLFxuICAgICAgICBwcm90b2NvbDogXCIwXCIsXG4gICAgICAgIGJ5dGVzOiBcIjIwNjUwNTBcIixcbiAgICAgICAgaW5pZmFjZTogXCJhbGxcIixcbiAgICAgICAgb3V0aWZhY2U6IFwiYWxsXCIsXG4gICAgICAgIHBvbGljeTogXCJBQ0NFUFRcIlxuICAgICAgfSxcbiAgICAgIG5hbWU6IFwicGFja19pbmNpZGVudC1yZXNwb25zZV9pcHRhYmxlc1wiLFxuICAgICAgYWN0aW9uOiBcImFkZGVkXCIsXG4gICAgICBlcG9jaDogXCIwXCIsXG4gICAgICBjb3VudGVyOiBcIjI4MlwiLFxuICAgICAgcGFjazogXCJpbmNpZGVudC1yZXNwb25zZVwiXG4gICAgfSxcbiAgICBydWxlOiB7XG4gICAgICBmaXJlZHRpbWVzOiAxNyxcbiAgICAgIG1haWw6IGZhbHNlLFxuICAgICAgbGV2ZWw6IDQsXG4gICAgICBkZXNjcmlwdGlvbjogXCJvc3F1ZXJ5OiBpbmNpZGVudC1yZXNwb25zZSBpcHRhYmxlczogSXB0YWJsZSBzb3VyY2UgaXAgMC4wLjAuMCB3aXRoIHBvbGljeSBBQ0NFUFQgYW5kIHRhcmdldCBET0NLRVIgaGFzIGEgcGFja2V0IGNvdW50IG9mIDM0NTUzXCIsXG4gICAgfVxuICB9LFxuICB7XG4gICAgb3NxdWVyeToge1xuICAgICAgY2FsZW5kYXJUaW1lOiBuZXcgRGF0ZSgpLFxuICAgICAgc3VicXVlcnk6IFwic2NoZWR1bGVcIixcbiAgICAgIGNvbHVtbnM6IHtcbiAgICAgICAgYXZlcmFnZV9tZW1vcnk6IFwiMFwiLFxuICAgICAgICBhdmdfc3lzdGVtX3RpbWU6IFwiMFwiLFxuICAgICAgICBleGVjdXRpb25zOiBcIjE3N1wiLFxuICAgICAgICBvdXRwdXRfc2l6ZTogXCIwXCIsXG4gICAgICAgIG5hbWU6IFwicGFja19vc3NlYy1yb290a2l0X3prX3Jvb3RraXRcIixcbiAgICAgICAgaW50ZXJ2YWw6IFwiMzYwMFwiLFxuICAgICAgICBhdmdfdXNlcl90aW1lOiBcIjBcIixcbiAgICAgICAgbGFzdF9leGVjdXRlZDogXCIxNTg3NDgyMDc5XCIsXG4gICAgICAgIHdhbGxfdGltZTogXCIwXCJcbiAgICAgIH0sXG4gICAgICBuYW1lOiBcInBhY2tfb3NxdWVyeS1tb25pdG9yaW5nX3NjaGVkdWxlXCIsXG4gICAgICBhY3Rpb246IFwiYWRkZWRcIixcbiAgICAgIGVwb2NoOiBcIjBcIixcbiAgICAgIGNvdW50ZXI6IFwiMjgyXCIsXG4gICAgICBwYWNrOiBcIm9zcXVlcnktbW9uaXRvcmluZ1wiXG4gICAgfSxcbiAgICBydWxlOiB7XG4gICAgICBmaXJlZHRpbWVzOiA4MixcbiAgICAgIG1haWw6IGZhbHNlLFxuICAgICAgbGV2ZWw6IDQsXG4gICAgICBkZXNjcmlwdGlvbjogXCJvc3F1ZXJ5OiBvc3F1ZXJ5LW1vbml0b3Jpbmcgc2NoZWR1bGU6IFRoZSBwYWNrIGV4ZWN1dGVkIGlzIHBhY2tfb3NzZWMtcm9vdGtpdF96a19yb290a2l0IGFuZCB0aGUgaW50ZXJ2YWwgaXMgMzYwMCBcIixcbiAgICB9XG4gIH0sXG4gIHtcbiAgICBvc3F1ZXJ5OiB7XG4gICAgICBjYWxlbmRhclRpbWU6IG5ldyBEYXRlKCksXG4gICAgICBzdWJxdWVyeTogXCJvc3F1ZXJ5X2luZm9cIixcbiAgICAgIGNvbHVtbnM6IHtcbiAgICAgICAgd2F0Y2hlcjogXCIxODU5NlwiLFxuICAgICAgICBzeXN0ZW1fdGltZTogXCI4Njc0MFwiLFxuICAgICAgICBjb25maWdfdmFsaWQ6IFwiMVwiLFxuICAgICAgICBwaWQ6IFwiMTg2MzFcIixcbiAgICAgICAgY291bnRlcjogXCIzM1wiLFxuICAgICAgICB1dWlkOiBcIkVDMjM0QTVCLUQyM0ItQTdBRC1DRkY3LUJDM0YyNENDNTM2NlwiLFxuICAgICAgICB2ZXJzaW9uOiBcIjMuMy4yXCIsXG4gICAgICAgIGNvbmZpZ19oYXNoOiBcIjg0MjNhZjE4MjBlMDljZWYyMWM4ZWQ1NTk0ODI3YjEzZWE4YWY5MGRcIixcbiAgICAgICAgYnVpbGRfcGxhdGZvcm06IFwidWJ1bnR1XCIsXG4gICAgICAgIHN0YXJ0X3RpbWU6IFwiMTU4Njg5MzYxMVwiLFxuICAgICAgICBleHRlbnNpb25zOiBcImFjdGl2ZVwiLFxuICAgICAgICBpbnN0YW5jZV9pZDogXCIyOWViYzI1MC00ZDlkLTQ0MjAtYjQ2Zi0xMjdmZjllMjQzN2RcIixcbiAgICAgICAgYnVpbGRfZGlzdHJvOiBcInhlbmlhbFwiLFxuICAgICAgICByZXNpZGVudF9zaXplOiBcIjY2NjY0MDAwXCIsXG4gICAgICAgIHVzZXJfdGltZTogXCIxMjQ0OTBcIlxuICAgICAgfSxcbiAgICAgIG5hbWU6IFwicGFja19vc3F1ZXJ5LW1vbml0b3Jpbmdfb3NxdWVyeV9pbmZvXCIsXG4gICAgICBhY3Rpb246IFwiYWRkZWRcIixcbiAgICAgIGVwb2NoOiBcIjBcIixcbiAgICAgIGNvdW50ZXI6IFwiMTc4OVwiLFxuICAgICAgcGFjazogXCJvc3F1ZXJ5LW1vbml0b3JpbmdcIlxuICAgIH0sXG4gICAgcnVsZToge1xuICAgICAgZmlyZWR0aW1lczogODIsXG4gICAgICBtYWlsOiBmYWxzZSxcbiAgICAgIGxldmVsOiA0LFxuICAgICAgZGVzY3JpcHRpb246IFwib3NxdWVyeTogb3NxdWVyeS1tb25pdG9yaW5nIHNjaGVkdWxlOiBUaGUgcGFjayBleGVjdXRlZCBpcyBwYWNrX29zc2VjLXJvb3RraXRfemtfcm9vdGtpdCBhbmQgdGhlIGludGVydmFsIGlzIDM2MDAgXCIsXG4gICAgfVxuICB9LFxuICB7XG4gICAgb3NxdWVyeToge1xuICAgICAgY2FsZW5kYXJUaW1lOiBuZXcgRGF0ZSgpLFxuICAgICAgc3VicXVlcnk6IFwibW91bnRzXCIsXG4gICAgICBjb2x1bW5zOiB7XG4gICAgICAgIHBhdGg6IFwiL1wiLFxuICAgICAgICBibG9ja3M6IFwiNTIzOTgwM1wiLFxuICAgICAgICBpbm9kZXM6IFwiMTA0ODQ3MjBcIixcbiAgICAgICAgZmxhZ3M6IFwicncsc2VjbGFiZWwscmVsYXRpbWUsYXR0cjIsaW5vZGU2NCxub3F1b3RhXCIsXG4gICAgICAgIGlub2Rlc19mcmVlOiBcIjEwNDM2MjYxXCIsXG4gICAgICAgIGJsb2Nrc19zaXplOiBcIjQwOTZcIixcbiAgICAgICAgYmxvY2tzX2F2YWlsYWJsZTogXCIzOTQwNzc2XCIsXG4gICAgICAgIHR5cGU6IFwieGZzXCIsXG4gICAgICAgIGRldmljZTogXCIvZGV2L3h2ZGEyXCIsXG4gICAgICAgIGRldmljZV9hbGlhczogXCIvZGV2L3h2ZGEyXCIsXG4gICAgICAgIGJsb2Nrc19mcmVlOiBcIjM5NDA3NzZcIlxuICAgICAgfSxcbiAgICAgIG5hbWU6IFwicGFja19pbmNpZGVudC1yZXNwb25zZV9tb3VudHNcIixcbiAgICAgIGFjdGlvbjogXCJhZGRlZFwiLFxuICAgICAgZXBvY2g6IFwiMFwiLFxuICAgICAgY291bnRlcjogXCIyNzhcIixcbiAgICAgIHBhY2s6IFwiaW5jaWRlbnQtcmVzcG9uc2VcIlxuICAgIH0sXG4gICAgcnVsZToge1xuICAgICAgZmlyZWR0aW1lczogODIsXG4gICAgICBtYWlsOiBmYWxzZSxcbiAgICAgIGxldmVsOiA0LFxuICAgICAgZGVzY3JpcHRpb246IFwib3NxdWVyeTogb3NxdWVyeS1tb25pdG9yaW5nIHNjaGVkdWxlOiBUaGUgcGFjayBleGVjdXRlZCBpcyBwYWNrX29zc2VjLXJvb3RraXRfemtfcm9vdGtpdCBhbmQgdGhlIGludGVydmFsIGlzIDM2MDAgXCIsXG4gICAgfVxuICB9LFxuICB7XG4gICAgb3NxdWVyeToge1xuICAgICAgY2FsZW5kYXJUaW1lOiBuZXcgRGF0ZSgpLFxuICAgICAgc3VicXVlcnk6IFwiaXB0YWJsZXNcIixcbiAgICAgIGNvbHVtbnM6IHtcbiAgICAgICAgbWVtb3J5X2ZyZWU6IFwiMTU2MDEyNTQ0XCIsXG4gICAgICAgIG1lbW9yeV9mcmVlX3BlcmM6IFwiMC4wMzkyNzEzMDE4MTIzNjNcIixcbiAgICAgICAgdGhyZXNob2xkOiBcIjEwJVwiLFxuICAgICAgICBtZW1vcnlfdG90YWw6IFwiMzk3MjY4NTgyNFwiXG4gICAgICB9LFxuICAgICAgbmFtZTogXCJsb3dfZnJlZV9tZW1vcnlcIixcbiAgICAgIGFjdGlvbjogXCJhZGRlZFwiLFxuICAgICAgZXBvY2g6IFwiMFwiLFxuICAgICAgY291bnRlcjogXCI1NDhcIixcbiAgICB9LFxuICAgIHJ1bGU6IHtcbiAgICAgIGZpcmVkdGltZXM6IDgyLFxuICAgICAgbWFpbDogZmFsc2UsXG4gICAgICBsZXZlbDogNCxcbiAgICAgIGRlc2NyaXB0aW9uOiBcIm9zcXVlcnk6IFN5c3RlbSBtZW1vcnkgaXMgdW5kZXIgMTAlXCIsXG4gICAgfVxuICB9LFxuICB7XG4gICAgb3NxdWVyeToge1xuICAgICAgY2FsZW5kYXJUaW1lOiBuZXcgRGF0ZSgpLFxuICAgICAgc3VicXVlcnk6IFwiaXB0YWJsZXNcIixcbiAgICAgIGNvbHVtbnM6IHtcbiAgICAgICAgbWVtb3J5X2ZyZWU6IFwiMTU2MDEyNTQ0XCIsXG4gICAgICAgIG1lbW9yeV9mcmVlX3BlcmM6IFwiMC4wMzkyNzEzMDE4MTIzNjNcIixcbiAgICAgICAgdGhyZXNob2xkOiBcIjE1JVwiLFxuICAgICAgICBtZW1vcnlfdG90YWw6IFwiMzk3MjY4NTgyNFwiXG4gICAgICB9LFxuICAgICAgbmFtZTogXCJsb3dfZnJlZV9tZW1vcnlcIixcbiAgICAgIGFjdGlvbjogXCJhZGRlZFwiLFxuICAgICAgZXBvY2g6IFwiMFwiLFxuICAgICAgY291bnRlcjogXCI1NDhcIixcbiAgICB9LFxuICAgIHJ1bGU6IHtcbiAgICAgIGZpcmVkdGltZXM6IDgyLFxuICAgICAgbWFpbDogZmFsc2UsXG4gICAgICBsZXZlbDogNCxcbiAgICAgIGRlc2NyaXB0aW9uOiBcIm9zcXVlcnk6IFN5c3RlbSBtZW1vcnkgaXMgdW5kZXIgMTUlXCIsXG4gICAgfVxuICB9LFxuICB7XG4gICAgb3NxdWVyeToge1xuICAgICAgY2FsZW5kYXJUaW1lOiBuZXcgRGF0ZSgpLFxuICAgICAgc3VicXVlcnk6IFwicHJvY2Vzc19tZW1vcnlcIixcbiAgICAgIGNvbHVtbnM6IHtcbiAgICAgICAgaW5vZGU6IFwiMFwiLFxuICAgICAgICBvZmZzZXQ6IFwiMFwiLFxuICAgICAgICBwZXJtaXNzaW9uczogXCJyLXhwXCIsXG4gICAgICAgIHN0YXJ0OiBcIjB4ZmZmZmZmZmZmZjYwMDAwMFwiLFxuICAgICAgICBlbmQ6IFwiMHhmZmZmZmZmZmZmNjAxMDAwXCIsXG4gICAgICAgIHBpZDogXCI2NDRcIixcbiAgICAgICAgZGV2aWNlOiBcIjAwOjAwXCIsXG4gICAgICAgIHBzZXVkbzogXCIxXCJcbiAgICAgIH0sXG4gICAgICBuYW1lOiBcInBhY2tfaW5jaWRlbnQtcmVzcG9uc2VfcHJvY2Vzc19tZW1vcnlcIixcbiAgICAgIGFjdGlvbjogXCJhZGRlZFwiLFxuICAgICAgZXBvY2g6IFwiMFwiLFxuICAgICAgY291bnRlcjogXCIxMlwiLFxuICAgIH0sXG4gICAgcnVsZToge1xuICAgICAgZmlyZWR0aW1lczogNzYyMSxcbiAgICAgIG1haWw6IGZhbHNlLFxuICAgICAgbGV2ZWw6IDQsXG4gICAgICBkZXNjcmlwdGlvbjogXCJvc3F1ZXJ5OiBpbmNpZGVudC1yZXNwb25zZSBwcm9jZXNzX21lbW9yeTogUHJvY2VzcyA2NDQgW3ZzeXNjYWxsXSBtZW1vcnkgc3RhcnQgMHhmZmZmZmZmZmZmNjAwMDAwLCBtZW1vcnkgZW5kIDB4ZmZmZmZmZmZmZjYwMTAwMFwiLFxuICAgIH1cbiAgfSxcbiAge1xuICAgIG9zcXVlcnk6IHtcbiAgICAgIGNhbGVuZGFyVGltZTogbmV3IERhdGUoKSxcbiAgICAgIHN1YnF1ZXJ5OiBcImlwdGFibGVzXCIsXG4gICAgICBjb2x1bW5zOiB7XG4gICAgICAgIGNoYWluOiBcIlBPU1RST1VUSU5HXCIsXG4gICAgICAgIGZpbHRlcl9uYW1lOiBcIm5hdFwiLFxuICAgICAgICBkc3RfbWFzazogXCIwLjAuMC4wXCIsXG4gICAgICAgIG1hdGNoOiBcInllc1wiLFxuICAgICAgICBzcmNfbWFzazogXCIyNTUuMjU1LjAuMFwiLFxuICAgICAgICBkc3RfaXA6IFwiMC4wLjAuMFwiLFxuICAgICAgICBwYWNrZXRzOiBcIjQzMjk0XCIsXG4gICAgICAgIHRhcmdldDogXCJNQVNRVUVSQURFXCIsXG4gICAgICAgIHNyY19pcDogXCIxNzIuMTcuMC4wXCIsXG4gICAgICAgIHByb3RvY29sOiBcIjBcIixcbiAgICAgICAgb3V0aWZhY2VfbWFzazogXCJGRkZGRkZGRkZGRkZGRkZGXCIsXG4gICAgICAgIGJ5dGVzOiBcIjMyODczNzBcIixcbiAgICAgICAgaW5pZmFjZTogXCJhbGxcIixcbiAgICAgICAgb3V0aWZhY2U6IFwiZG9ja2VyMFwiLFxuICAgICAgICBwb2xpY3k6IFwiQUNDRVBUXCJcbiAgICAgIH0sXG4gICAgICBuYW1lOiBcInBhY2tfaW5jaWRlbnQtcmVzcG9uc2VfaXB0YWJsZXNcIixcbiAgICAgIGFjdGlvbjogXCJhZGRlZFwiLFxuICAgICAgZXBvY2g6IFwiMFwiLFxuICAgICAgY291bnRlcjogXCIyODNcIixcbiAgICB9LFxuICAgIHJ1bGU6IHtcbiAgICAgIGZpcmVkdGltZXM6IDE4LFxuICAgICAgbWFpbDogZmFsc2UsXG4gICAgICBsZXZlbDogNCxcbiAgICAgIGRlc2NyaXB0aW9uOiBcIm9zcXVlcnk6IGluY2lkZW50LXJlc3BvbnNlIGlwdGFibGVzOiBJcHRhYmxlIHNvdXJjZSBpcCAxNzIuMTcuMC4wIHdpdGggcG9saWN5IEFDQ0VQVCBhbmQgdGFyZ2V0IE1BU1FVRVJBREUgaGFzIGEgcGFja2V0IGNvdW50IG9mIDQzMjk0XCIsXG4gICAgfVxuICB9LFxuICB7XG4gICAgb3NxdWVyeToge1xuICAgICAgY2FsZW5kYXJUaW1lOiBuZXcgRGF0ZSgpLFxuICAgICAgc3VicXVlcnk6IFwicHJvY2Vzc19lbnZcIixcbiAgICAgIGNvbHVtbnM6IHtcbiAgICAgICAgcGlkOiBcIjI2MTUxXCIsXG4gICAgICAgIHZhbHVlOiBcIjI0NFwiLFxuICAgICAgICBrZXk6IFwiR0VORVJBVElPTlwiXG4gICAgICB9LFxuICAgICAgbmFtZTogXCJwYWNrX2luY2lkZW50LXJlc3BvbnNlX3Byb2Nlc3NfZW52XCIsXG4gICAgICBhY3Rpb246IFwiYWRkZWRcIixcbiAgICAgIGVwb2NoOiBcIjBcIixcbiAgICAgIGNvdW50ZXI6IFwiMTFcIixcbiAgICB9LFxuICAgIHJ1bGU6IHtcbiAgICAgIGZpcmVkdGltZXM6IDE4LFxuICAgICAgbWFpbDogZmFsc2UsXG4gICAgICBsZXZlbDogNCxcbiAgICAgIGRlc2NyaXB0aW9uOiBcIm9zcXVlcnk6IGluY2lkZW50LXJlc3BvbnNlIHByb2Nlc3NfZW52OiBQcm9jZXNzIDI2MTUxIEVudmlyb25tZW50IHZhcmlhYmxlIEdFTkVSQVRJT04gdmFsdWUgMjQ0XCIsXG4gICAgfVxuICB9LFxuICB7XG4gICAgb3NxdWVyeToge1xuICAgICAgY2FsZW5kYXJUaW1lOiBuZXcgRGF0ZSgpLFxuICAgICAgc3VicXVlcnk6IFwiZGV2aWNlX25vZGVzXCIsXG4gICAgICBjb2x1bW5zOiB7XG4gICAgICAgIG1vZGU6IFwiMDY2NlwiLFxuICAgICAgICBwYXRoOiBcIi9kZXYvcHRteFwiLFxuICAgICAgICB1aWQ6IFwiMFwiLFxuICAgICAgICBhdGltZTogXCIwXCIsXG4gICAgICAgIGdpZDogXCI1XCIsXG4gICAgICAgIGN0aW1lOiBcIjE1ODY0NDQzNDBcIixcbiAgICAgICAgbXRpbWU6IFwiMTU4NzQ4OTU5MlwiLFxuICAgICAgICB0eXBlOiBcImNoYXJhY3RlclwiLFxuICAgICAgICBibG9ja19zaXplOiBcIjQwOTZcIlxuICAgICAgfSxcbiAgICAgIG5hbWU6IFwicGFja19oYXJkd2FyZS1tb25pdG9yaW5nX2RldmljZV9ub2Rlc1wiLFxuICAgICAgYWN0aW9uOiBcImFkZGVkXCIsXG4gICAgICBlcG9jaDogXCIwXCIsXG4gICAgICBjb3VudGVyOiBcIjEzOFwiLFxuICAgICAgcGFjazogXCJoYXJkd2FyZS1tb25pdG9yaW5nXCJcbiAgICB9LFxuICAgIHJ1bGU6IHtcbiAgICAgIGZpcmVkdGltZXM6IDYsXG4gICAgICBtYWlsOiBmYWxzZSxcbiAgICAgIGxldmVsOiA0LFxuICAgICAgZGVzY3JpcHRpb246IFwib3NxdWVyeTogaGFyZHdhcmUtbW9uaXRvcmluZyBkZXZpY2Vfbm9kZXM6IERldmljZSAvZGV2L3B0bXgsIFVJRCAwLCBHSUQgNSwgdHlwZSBjaGFyYWN0ZXJcIixcbiAgICB9XG4gIH0sXG4gIHtcbiAgICBvc3F1ZXJ5OiB7XG4gICAgICBjYWxlbmRhclRpbWU6IG5ldyBEYXRlKCksXG4gICAgICBzdWJxdWVyeTogXCJsYXN0XCIsXG4gICAgICBjb2x1bW5zOiB7XG4gICAgICAgIHR0eTogXCJwdHMvMFwiLFxuICAgICAgICBwaWQ6IFwiMjU3MjhcIixcbiAgICAgICAgdGltZTogXCIxNTg3NDk0Nzc3XCIsXG4gICAgICAgIHR5cGU6IFwiOFwiXG4gICAgICB9LFxuICAgICAgbmFtZTogXCJwYWNrX2luY2lkZW50LXJlc3BvbnNlX2xhc3RcIixcbiAgICAgIGFjdGlvbjogXCJhZGRlZFwiLFxuICAgICAgZXBvY2g6IFwiMFwiLFxuICAgICAgY291bnRlcjogXCIxXCIsXG4gICAgICBwYWNrOiBcImluY2lkZW50LXJlc3BvbnNlXCJcbiAgICB9LFxuICAgIHJ1bGU6IHtcbiAgICAgIGZpcmVkdGltZXM6IDIsXG4gICAgICBtYWlsOiBmYWxzZSxcbiAgICAgIGxldmVsOiA0LFxuICAgICAgZGVzY3JpcHRpb246IFwib3NxdWVyeTogaW5jaWRlbnQtcmVzcG9uc2UgbGFzdDogVXNlciAgaG9zdFwiLFxuICAgIH1cbiAgfSxcbiAge1xuICAgIG9zcXVlcnk6IHtcbiAgICAgIGNhbGVuZGFyVGltZTogbmV3IERhdGUoKSxcbiAgICAgIHN1YnF1ZXJ5OiBcIm9wZW5fZmlsZXNcIixcbiAgICAgIGNvbHVtbnM6IHtcbiAgICAgICAgcGF0aDogXCIvdmFyL29zcXVlcnkvb3NxdWVyeS5kYi9NQU5JRkVTVC0wMTY2NzlcIixcbiAgICAgICAgcGlkOiBcIjE4NjMxXCJcbiAgICAgIH0sXG4gICAgICBuYW1lOiBcInBhY2tfaW5jaWRlbnQtcmVzcG9uc2Vfb3Blbl9maWxlc1wiLFxuICAgICAgYWN0aW9uOiBcImFkZGVkXCIsXG4gICAgICBlcG9jaDogXCIwXCIsXG4gICAgICBjb3VudGVyOiBcIjExXCIsXG4gICAgICBwYWNrOiBcImluY2lkZW50LXJlc3BvbnNlXCJcbiAgICB9LFxuICAgIHJ1bGU6IHtcbiAgICAgIGZpcmVkdGltZXM6IDIsXG4gICAgICBtYWlsOiBmYWxzZSxcbiAgICAgIGxldmVsOiA0LFxuICAgICAgZGVzY3JpcHRpb246IFwib3NxdWVyeTogaW5jaWRlbnQtcmVzcG9uc2Ugb3Blbl9maWxlczogUHJvY2VzcyAxODYzMSBoYXMgZmlsZSAvdmFyL29zcXVlcnkvb3NxdWVyeS5kYi9NQU5JRkVTVC0wMTY2Nzkgb3BlbmVkXCIsXG4gICAgfVxuICB9LFxuXVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVPLE1BQU1BLFdBQVcsR0FBQUMsT0FBQSxDQUFBRCxXQUFBLEdBQUcsQ0FBQztFQUN4QkUsT0FBTyxFQUFFO0lBQ1BDLFlBQVksRUFBRSxJQUFJQyxJQUFJLENBQUMsQ0FBQztJQUN4QkMsUUFBUSxFQUFFLGNBQWM7SUFDeEJDLE9BQU8sRUFBRTtNQUNQQyxPQUFPLEVBQUUsSUFBSTtNQUNiQyxJQUFJLEVBQUUsc0NBQXNDO01BQzVDQyxPQUFPLEVBQUU7SUFDWCxDQUFDO0lBQ0RDLElBQUksRUFBRSxzQ0FBc0M7SUFDNUNDLE1BQU0sRUFBRSxPQUFPO0lBQ2ZDLEtBQUssRUFBRSxHQUFHO0lBQ1ZMLE9BQU8sRUFBRSxNQUFNO0lBQ2ZNLElBQUksRUFBRTtFQUNSLENBQUM7RUFDREMsSUFBSSxFQUFFO0lBQ0pDLFVBQVUsRUFBRSxDQUFDO0lBQ2JDLElBQUksRUFBRSxLQUFLO0lBQ1hDLEtBQUssRUFBRSxDQUFDO0lBQ1JDLFdBQVcsRUFBRTtFQUNmO0FBQ0YsQ0FBQyxFQUNEO0VBQ0VoQixPQUFPLEVBQUU7SUFDUEMsWUFBWSxFQUFFLElBQUlDLElBQUksQ0FBQyxDQUFDO0lBQ3hCQyxRQUFRLEVBQUUsVUFBVTtJQUNwQkMsT0FBTyxFQUFFO01BQ1BhLEtBQUssRUFBRSxhQUFhO01BQ3BCQyxXQUFXLEVBQUUsS0FBSztNQUNsQkMsUUFBUSxFQUFFLFNBQVM7TUFDbkJDLEtBQUssRUFBRSxLQUFLO01BQ1pDLFFBQVEsRUFBRSxhQUFhO01BQ3ZCQyxNQUFNLEVBQUUsU0FBUztNQUNqQkMsT0FBTyxFQUFFLE9BQU87TUFDaEJDLE1BQU0sRUFBRSxZQUFZO01BQ3BCQyxNQUFNLEVBQUUsWUFBWTtNQUNwQkMsUUFBUSxFQUFFLEdBQUc7TUFDYkMsYUFBYSxFQUFFLGtCQUFrQjtNQUNqQ0MsS0FBSyxFQUFFLFNBQVM7TUFDaEJDLE9BQU8sRUFBRSxLQUFLO01BQ2RDLFFBQVEsRUFBRSxTQUFTO01BQ25CQyxNQUFNLEVBQUU7SUFDVixDQUFDO0lBQ0R2QixJQUFJLEVBQUUsaUNBQWlDO0lBQ3ZDQyxNQUFNLEVBQUUsT0FBTztJQUNmQyxLQUFLLEVBQUUsR0FBRztJQUNWTCxPQUFPLEVBQUUsS0FBSztJQUNkTSxJQUFJLEVBQUU7RUFDUixDQUFDO0VBQ0RDLElBQUksRUFBRTtJQUNKQyxVQUFVLEVBQUUsRUFBRTtJQUNkQyxJQUFJLEVBQUUsS0FBSztJQUNYQyxLQUFLLEVBQUUsQ0FBQztJQUNSQyxXQUFXLEVBQUU7RUFDZjtBQUNGLENBQUMsRUFDRDtFQUNFaEIsT0FBTyxFQUFFO0lBQ1BDLFlBQVksRUFBRSxJQUFJQyxJQUFJLENBQUMsQ0FBQztJQUN4QkMsUUFBUSxFQUFFLFVBQVU7SUFDcEJDLE9BQU8sRUFBRTtNQUNQYSxLQUFLLEVBQUUsWUFBWTtNQUNuQkMsV0FBVyxFQUFFLEtBQUs7TUFDbEJDLFFBQVEsRUFBRSxTQUFTO01BQ25CQyxLQUFLLEVBQUUsS0FBSztNQUNaQyxRQUFRLEVBQUUsU0FBUztNQUNuQkMsTUFBTSxFQUFFLFNBQVM7TUFDakJDLE9BQU8sRUFBRSxPQUFPO01BQ2hCQyxNQUFNLEVBQUUsUUFBUTtNQUNoQkMsTUFBTSxFQUFFLFNBQVM7TUFDakJDLFFBQVEsRUFBRSxHQUFHO01BQ2JFLEtBQUssRUFBRSxTQUFTO01BQ2hCQyxPQUFPLEVBQUUsS0FBSztNQUNkQyxRQUFRLEVBQUUsS0FBSztNQUNmQyxNQUFNLEVBQUU7SUFDVixDQUFDO0lBQ0R2QixJQUFJLEVBQUUsaUNBQWlDO0lBQ3ZDQyxNQUFNLEVBQUUsT0FBTztJQUNmQyxLQUFLLEVBQUUsR0FBRztJQUNWTCxPQUFPLEVBQUUsS0FBSztJQUNkTSxJQUFJLEVBQUU7RUFDUixDQUFDO0VBQ0RDLElBQUksRUFBRTtJQUNKQyxVQUFVLEVBQUUsRUFBRTtJQUNkQyxJQUFJLEVBQUUsS0FBSztJQUNYQyxLQUFLLEVBQUUsQ0FBQztJQUNSQyxXQUFXLEVBQUU7RUFDZjtBQUNGLENBQUMsRUFDRDtFQUNFaEIsT0FBTyxFQUFFO0lBQ1BDLFlBQVksRUFBRSxJQUFJQyxJQUFJLENBQUMsQ0FBQztJQUN4QkMsUUFBUSxFQUFFLFVBQVU7SUFDcEJDLE9BQU8sRUFBRTtNQUNQNEIsY0FBYyxFQUFFLEdBQUc7TUFDbkJDLGVBQWUsRUFBRSxHQUFHO01BQ3BCQyxVQUFVLEVBQUUsS0FBSztNQUNqQkMsV0FBVyxFQUFFLEdBQUc7TUFDaEIzQixJQUFJLEVBQUUsK0JBQStCO01BQ3JDNEIsUUFBUSxFQUFFLE1BQU07TUFDaEJDLGFBQWEsRUFBRSxHQUFHO01BQ2xCQyxhQUFhLEVBQUUsWUFBWTtNQUMzQkMsU0FBUyxFQUFFO0lBQ2IsQ0FBQztJQUNEL0IsSUFBSSxFQUFFLGtDQUFrQztJQUN4Q0MsTUFBTSxFQUFFLE9BQU87SUFDZkMsS0FBSyxFQUFFLEdBQUc7SUFDVkwsT0FBTyxFQUFFLEtBQUs7SUFDZE0sSUFBSSxFQUFFO0VBQ1IsQ0FBQztFQUNEQyxJQUFJLEVBQUU7SUFDSkMsVUFBVSxFQUFFLEVBQUU7SUFDZEMsSUFBSSxFQUFFLEtBQUs7SUFDWEMsS0FBSyxFQUFFLENBQUM7SUFDUkMsV0FBVyxFQUFFO0VBQ2Y7QUFDRixDQUFDLEVBQ0Q7RUFDRWhCLE9BQU8sRUFBRTtJQUNQQyxZQUFZLEVBQUUsSUFBSUMsSUFBSSxDQUFDLENBQUM7SUFDeEJDLFFBQVEsRUFBRSxjQUFjO0lBQ3hCQyxPQUFPLEVBQUU7TUFDUG9DLE9BQU8sRUFBRSxPQUFPO01BQ2hCQyxXQUFXLEVBQUUsT0FBTztNQUNwQkMsWUFBWSxFQUFFLEdBQUc7TUFDakJDLEdBQUcsRUFBRSxPQUFPO01BQ1p0QyxPQUFPLEVBQUUsSUFBSTtNQUNiQyxJQUFJLEVBQUUsc0NBQXNDO01BQzVDQyxPQUFPLEVBQUUsT0FBTztNQUNoQnFDLFdBQVcsRUFBRSwwQ0FBMEM7TUFDdkRDLGNBQWMsRUFBRSxRQUFRO01BQ3hCQyxVQUFVLEVBQUUsWUFBWTtNQUN4QkMsVUFBVSxFQUFFLFFBQVE7TUFDcEJDLFdBQVcsRUFBRSxzQ0FBc0M7TUFDbkRDLFlBQVksRUFBRSxRQUFRO01BQ3RCQyxhQUFhLEVBQUUsVUFBVTtNQUN6QkMsU0FBUyxFQUFFO0lBQ2IsQ0FBQztJQUNEM0MsSUFBSSxFQUFFLHNDQUFzQztJQUM1Q0MsTUFBTSxFQUFFLE9BQU87SUFDZkMsS0FBSyxFQUFFLEdBQUc7SUFDVkwsT0FBTyxFQUFFLE1BQU07SUFDZk0sSUFBSSxFQUFFO0VBQ1IsQ0FBQztFQUNEQyxJQUFJLEVBQUU7SUFDSkMsVUFBVSxFQUFFLEVBQUU7SUFDZEMsSUFBSSxFQUFFLEtBQUs7SUFDWEMsS0FBSyxFQUFFLENBQUM7SUFDUkMsV0FBVyxFQUFFO0VBQ2Y7QUFDRixDQUFDLEVBQ0Q7RUFDRWhCLE9BQU8sRUFBRTtJQUNQQyxZQUFZLEVBQUUsSUFBSUMsSUFBSSxDQUFDLENBQUM7SUFDeEJDLFFBQVEsRUFBRSxRQUFRO0lBQ2xCQyxPQUFPLEVBQUU7TUFDUGdELElBQUksRUFBRSxHQUFHO01BQ1RDLE1BQU0sRUFBRSxTQUFTO01BQ2pCQyxNQUFNLEVBQUUsVUFBVTtNQUNsQkMsS0FBSyxFQUFFLDRDQUE0QztNQUNuREMsV0FBVyxFQUFFLFVBQVU7TUFDdkJDLFdBQVcsRUFBRSxNQUFNO01BQ25CQyxnQkFBZ0IsRUFBRSxTQUFTO01BQzNCQyxJQUFJLEVBQUUsS0FBSztNQUNYQyxNQUFNLEVBQUUsWUFBWTtNQUNwQkMsWUFBWSxFQUFFLFlBQVk7TUFDMUJDLFdBQVcsRUFBRTtJQUNmLENBQUM7SUFDRHRELElBQUksRUFBRSwrQkFBK0I7SUFDckNDLE1BQU0sRUFBRSxPQUFPO0lBQ2ZDLEtBQUssRUFBRSxHQUFHO0lBQ1ZMLE9BQU8sRUFBRSxLQUFLO0lBQ2RNLElBQUksRUFBRTtFQUNSLENBQUM7RUFDREMsSUFBSSxFQUFFO0lBQ0pDLFVBQVUsRUFBRSxFQUFFO0lBQ2RDLElBQUksRUFBRSxLQUFLO0lBQ1hDLEtBQUssRUFBRSxDQUFDO0lBQ1JDLFdBQVcsRUFBRTtFQUNmO0FBQ0YsQ0FBQyxFQUNEO0VBQ0VoQixPQUFPLEVBQUU7SUFDUEMsWUFBWSxFQUFFLElBQUlDLElBQUksQ0FBQyxDQUFDO0lBQ3hCQyxRQUFRLEVBQUUsVUFBVTtJQUNwQkMsT0FBTyxFQUFFO01BQ1AyRCxXQUFXLEVBQUUsV0FBVztNQUN4QkMsZ0JBQWdCLEVBQUUsbUJBQW1CO01BQ3JDQyxTQUFTLEVBQUUsS0FBSztNQUNoQkMsWUFBWSxFQUFFO0lBQ2hCLENBQUM7SUFDRDFELElBQUksRUFBRSxpQkFBaUI7SUFDdkJDLE1BQU0sRUFBRSxPQUFPO0lBQ2ZDLEtBQUssRUFBRSxHQUFHO0lBQ1ZMLE9BQU8sRUFBRTtFQUNYLENBQUM7RUFDRE8sSUFBSSxFQUFFO0lBQ0pDLFVBQVUsRUFBRSxFQUFFO0lBQ2RDLElBQUksRUFBRSxLQUFLO0lBQ1hDLEtBQUssRUFBRSxDQUFDO0lBQ1JDLFdBQVcsRUFBRTtFQUNmO0FBQ0YsQ0FBQyxFQUNEO0VBQ0VoQixPQUFPLEVBQUU7SUFDUEMsWUFBWSxFQUFFLElBQUlDLElBQUksQ0FBQyxDQUFDO0lBQ3hCQyxRQUFRLEVBQUUsVUFBVTtJQUNwQkMsT0FBTyxFQUFFO01BQ1AyRCxXQUFXLEVBQUUsV0FBVztNQUN4QkMsZ0JBQWdCLEVBQUUsbUJBQW1CO01BQ3JDQyxTQUFTLEVBQUUsS0FBSztNQUNoQkMsWUFBWSxFQUFFO0lBQ2hCLENBQUM7SUFDRDFELElBQUksRUFBRSxpQkFBaUI7SUFDdkJDLE1BQU0sRUFBRSxPQUFPO0lBQ2ZDLEtBQUssRUFBRSxHQUFHO0lBQ1ZMLE9BQU8sRUFBRTtFQUNYLENBQUM7RUFDRE8sSUFBSSxFQUFFO0lBQ0pDLFVBQVUsRUFBRSxFQUFFO0lBQ2RDLElBQUksRUFBRSxLQUFLO0lBQ1hDLEtBQUssRUFBRSxDQUFDO0lBQ1JDLFdBQVcsRUFBRTtFQUNmO0FBQ0YsQ0FBQyxFQUNEO0VBQ0VoQixPQUFPLEVBQUU7SUFDUEMsWUFBWSxFQUFFLElBQUlDLElBQUksQ0FBQyxDQUFDO0lBQ3hCQyxRQUFRLEVBQUUsZ0JBQWdCO0lBQzFCQyxPQUFPLEVBQUU7TUFDUCtELEtBQUssRUFBRSxHQUFHO01BQ1ZDLE1BQU0sRUFBRSxHQUFHO01BQ1hDLFdBQVcsRUFBRSxNQUFNO01BQ25CQyxLQUFLLEVBQUUsb0JBQW9CO01BQzNCQyxHQUFHLEVBQUUsb0JBQW9CO01BQ3pCNUIsR0FBRyxFQUFFLEtBQUs7TUFDVmlCLE1BQU0sRUFBRSxPQUFPO01BQ2ZZLE1BQU0sRUFBRTtJQUNWLENBQUM7SUFDRGhFLElBQUksRUFBRSx1Q0FBdUM7SUFDN0NDLE1BQU0sRUFBRSxPQUFPO0lBQ2ZDLEtBQUssRUFBRSxHQUFHO0lBQ1ZMLE9BQU8sRUFBRTtFQUNYLENBQUM7RUFDRE8sSUFBSSxFQUFFO0lBQ0pDLFVBQVUsRUFBRSxJQUFJO0lBQ2hCQyxJQUFJLEVBQUUsS0FBSztJQUNYQyxLQUFLLEVBQUUsQ0FBQztJQUNSQyxXQUFXLEVBQUU7RUFDZjtBQUNGLENBQUMsRUFDRDtFQUNFaEIsT0FBTyxFQUFFO0lBQ1BDLFlBQVksRUFBRSxJQUFJQyxJQUFJLENBQUMsQ0FBQztJQUN4QkMsUUFBUSxFQUFFLFVBQVU7SUFDcEJDLE9BQU8sRUFBRTtNQUNQYSxLQUFLLEVBQUUsYUFBYTtNQUNwQkMsV0FBVyxFQUFFLEtBQUs7TUFDbEJDLFFBQVEsRUFBRSxTQUFTO01BQ25CQyxLQUFLLEVBQUUsS0FBSztNQUNaQyxRQUFRLEVBQUUsYUFBYTtNQUN2QkMsTUFBTSxFQUFFLFNBQVM7TUFDakJDLE9BQU8sRUFBRSxPQUFPO01BQ2hCQyxNQUFNLEVBQUUsWUFBWTtNQUNwQkMsTUFBTSxFQUFFLFlBQVk7TUFDcEJDLFFBQVEsRUFBRSxHQUFHO01BQ2JDLGFBQWEsRUFBRSxrQkFBa0I7TUFDakNDLEtBQUssRUFBRSxTQUFTO01BQ2hCQyxPQUFPLEVBQUUsS0FBSztNQUNkQyxRQUFRLEVBQUUsU0FBUztNQUNuQkMsTUFBTSxFQUFFO0lBQ1YsQ0FBQztJQUNEdkIsSUFBSSxFQUFFLGlDQUFpQztJQUN2Q0MsTUFBTSxFQUFFLE9BQU87SUFDZkMsS0FBSyxFQUFFLEdBQUc7SUFDVkwsT0FBTyxFQUFFO0VBQ1gsQ0FBQztFQUNETyxJQUFJLEVBQUU7SUFDSkMsVUFBVSxFQUFFLEVBQUU7SUFDZEMsSUFBSSxFQUFFLEtBQUs7SUFDWEMsS0FBSyxFQUFFLENBQUM7SUFDUkMsV0FBVyxFQUFFO0VBQ2Y7QUFDRixDQUFDLEVBQ0Q7RUFDRWhCLE9BQU8sRUFBRTtJQUNQQyxZQUFZLEVBQUUsSUFBSUMsSUFBSSxDQUFDLENBQUM7SUFDeEJDLFFBQVEsRUFBRSxhQUFhO0lBQ3ZCQyxPQUFPLEVBQUU7TUFDUHVDLEdBQUcsRUFBRSxPQUFPO01BQ1o4QixLQUFLLEVBQUUsS0FBSztNQUNaQyxHQUFHLEVBQUU7SUFDUCxDQUFDO0lBQ0RsRSxJQUFJLEVBQUUsb0NBQW9DO0lBQzFDQyxNQUFNLEVBQUUsT0FBTztJQUNmQyxLQUFLLEVBQUUsR0FBRztJQUNWTCxPQUFPLEVBQUU7RUFDWCxDQUFDO0VBQ0RPLElBQUksRUFBRTtJQUNKQyxVQUFVLEVBQUUsRUFBRTtJQUNkQyxJQUFJLEVBQUUsS0FBSztJQUNYQyxLQUFLLEVBQUUsQ0FBQztJQUNSQyxXQUFXLEVBQUU7RUFDZjtBQUNGLENBQUMsRUFDRDtFQUNFaEIsT0FBTyxFQUFFO0lBQ1BDLFlBQVksRUFBRSxJQUFJQyxJQUFJLENBQUMsQ0FBQztJQUN4QkMsUUFBUSxFQUFFLGNBQWM7SUFDeEJDLE9BQU8sRUFBRTtNQUNQdUUsSUFBSSxFQUFFLE1BQU07TUFDWnZCLElBQUksRUFBRSxXQUFXO01BQ2pCd0IsR0FBRyxFQUFFLEdBQUc7TUFDUkMsS0FBSyxFQUFFLEdBQUc7TUFDVkMsR0FBRyxFQUFFLEdBQUc7TUFDUkMsS0FBSyxFQUFFLFlBQVk7TUFDbkJDLEtBQUssRUFBRSxZQUFZO01BQ25CckIsSUFBSSxFQUFFLFdBQVc7TUFDakJzQixVQUFVLEVBQUU7SUFDZCxDQUFDO0lBQ0R6RSxJQUFJLEVBQUUsdUNBQXVDO0lBQzdDQyxNQUFNLEVBQUUsT0FBTztJQUNmQyxLQUFLLEVBQUUsR0FBRztJQUNWTCxPQUFPLEVBQUUsS0FBSztJQUNkTSxJQUFJLEVBQUU7RUFDUixDQUFDO0VBQ0RDLElBQUksRUFBRTtJQUNKQyxVQUFVLEVBQUUsQ0FBQztJQUNiQyxJQUFJLEVBQUUsS0FBSztJQUNYQyxLQUFLLEVBQUUsQ0FBQztJQUNSQyxXQUFXLEVBQUU7RUFDZjtBQUNGLENBQUMsRUFDRDtFQUNFaEIsT0FBTyxFQUFFO0lBQ1BDLFlBQVksRUFBRSxJQUFJQyxJQUFJLENBQUMsQ0FBQztJQUN4QkMsUUFBUSxFQUFFLE1BQU07SUFDaEJDLE9BQU8sRUFBRTtNQUNQOEUsR0FBRyxFQUFFLE9BQU87TUFDWnZDLEdBQUcsRUFBRSxPQUFPO01BQ1p3QyxJQUFJLEVBQUUsWUFBWTtNQUNsQnhCLElBQUksRUFBRTtJQUNSLENBQUM7SUFDRG5ELElBQUksRUFBRSw2QkFBNkI7SUFDbkNDLE1BQU0sRUFBRSxPQUFPO0lBQ2ZDLEtBQUssRUFBRSxHQUFHO0lBQ1ZMLE9BQU8sRUFBRSxHQUFHO0lBQ1pNLElBQUksRUFBRTtFQUNSLENBQUM7RUFDREMsSUFBSSxFQUFFO0lBQ0pDLFVBQVUsRUFBRSxDQUFDO0lBQ2JDLElBQUksRUFBRSxLQUFLO0lBQ1hDLEtBQUssRUFBRSxDQUFDO0lBQ1JDLFdBQVcsRUFBRTtFQUNmO0FBQ0YsQ0FBQyxFQUNEO0VBQ0VoQixPQUFPLEVBQUU7SUFDUEMsWUFBWSxFQUFFLElBQUlDLElBQUksQ0FBQyxDQUFDO0lBQ3hCQyxRQUFRLEVBQUUsWUFBWTtJQUN0QkMsT0FBTyxFQUFFO01BQ1BnRCxJQUFJLEVBQUUseUNBQXlDO01BQy9DVCxHQUFHLEVBQUU7SUFDUCxDQUFDO0lBQ0RuQyxJQUFJLEVBQUUsbUNBQW1DO0lBQ3pDQyxNQUFNLEVBQUUsT0FBTztJQUNmQyxLQUFLLEVBQUUsR0FBRztJQUNWTCxPQUFPLEVBQUUsSUFBSTtJQUNiTSxJQUFJLEVBQUU7RUFDUixDQUFDO0VBQ0RDLElBQUksRUFBRTtJQUNKQyxVQUFVLEVBQUUsQ0FBQztJQUNiQyxJQUFJLEVBQUUsS0FBSztJQUNYQyxLQUFLLEVBQUUsQ0FBQztJQUNSQyxXQUFXLEVBQUU7RUFDZjtBQUNGLENBQUMsQ0FDRiJ9